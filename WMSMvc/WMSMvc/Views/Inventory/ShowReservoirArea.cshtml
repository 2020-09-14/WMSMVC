
@{
    ViewData["Title"] = "ShowReservoirArea";
    Layout = null;
}

<h1>库区管理</h1>
<link href="~/js/ElementUI/element-ui.css" rel="stylesheet" />
<div id="div1">
    <el-form :model="ruleForm" status-icon :rules="rules" ref="ruleForm" label-width="100px" class="demo-ruleForm">
        <span>仓库:</span>
        <template>
            <el-select v-model="formData.WareHouseData" clearable="true" v-on:change="selectChange1" placeholder="请选择">
                <el-option v-for="wh in WareHouse"
                           :key="wh.warehouseId"
                           :label="wh.wname"
                           :value="wh.warehouseId">
                </el-option>
            </el-select>
        </template>
        &nbsp;&nbsp;&nbsp;&nbsp;
        <span>库区名称:</span>
        <el-input placeholder="请输入内容" style="width:200px"
                  v-model="input1"
                  clearable>
        </el-input>
        &nbsp;&nbsp;
        <el-button type="primary" v-on:click="Show()">查询</el-button>
        <el-button v-on:click="addRow()" type="primary" class="el-icon-circle-plus-outline">新增库区</el-button>
        <!-- 新增库区窗口 -->
        <el-dialog title="添加库区" :visible.sync="addFormVisible">
            <el-form>
                <el-form-item label="库区名称" :label-width="formLabelWidth">
                    <el-input v-model="RName" autocomplete="off"></el-input>
                </el-form-item>
                <el-form-item label="库区备注" :label-width="formLabelWidth">
                    <el-input v-model="Remark" autocomplete="off"></el-input>
                </el-form-item>
                <el-form-item label="所属温区" :label-width="formLabelWidth">
                    <el-input v-model="TemperatureZone" autocomplete="off"></el-input>
                </el-form-item>
                <el-form-item label="所属仓库" :label-width="formLabelWidth">
                    <el-select v-model="formData.WareHouseData" clearable="true" v-on:change="selectChange1" placeholder="请选择">
                        <el-option v-for="wh in WareHouse"
                                   :key="wh.warehouseId"
                                   :label="wh.wname"
                                   :value="wh.warehouseId">
                        </el-option>
                    </el-select>
                </el-form-item>
            </el-form>
            <div>
                <el-button v-on:click="cancel()">取消</el-button>
                <el-button type="primary" v-on:click="sumbitAddRow()">确定</el-button>
            </div>
        </el-dialog>
    </el-form>
    <el-table :data="tableData"
              style="width: 100%"
              height="250">
        <el-table-column fixed
                         prop="warehouseId"
                         label="序号"
                         width="150">
        </el-table-column>
        <el-table-column prop="wname"
                         label="所属仓库"
                         width="150">
        </el-table-column>
        <el-table-column prop="rname"
                         label="库区名称"
                         width="150">
        </el-table-column>
        <el-table-column prop="temperatureZone"
                         label="所属温区"
                         width="150">
        </el-table-column>
        <el-table-column label="操作">
            <template slot-scope="scope">
                <el-button v-on:click="Upt(scope.row)" size="mini" type="primary">编辑</el-button>
                <el-button v-on:click="Del(scope.row)" size="mini" type="danger">删除</el-button>
            </template>
        </el-table-column>
    </el-table>
    <!-- 新增编辑窗口 -->
    <el-dialog title="编辑库区" :visible.sync="editFormVisible">
        <el-form>
            <el-form-item label="库区名称" :label-width="formLabelWidth">
                <el-input v-model="RName1" autocomplete="off"></el-input>
            </el-form-item>
            <el-form-item label="库区备注" :label-width="formLabelWidth">
                <el-input v-model="Remark1" autocomplete="off"></el-input>
            </el-form-item>
            <el-form-item label="所属温区" :label-width="formLabelWidth">
                <el-input v-model="TemperatureZone1" autocomplete="off"></el-input>
            </el-form-item>
            <el-form-item label="所属仓库" :label-width="formLabelWidth">
                <el-select v-model="formData.WareHouseData" clearable="true" v-on:change="selectChange1" placeholder="请选择">
                    <el-option v-for="wh in WareHouse"
                               :key="wh.warehouseId"
                               :label="wh.wname"
                               :value="wh.warehouseId">
                    </el-option>
                </el-select>
            </el-form-item>
        </el-form>
        <div>
            <el-button v-on:click="cancel()">取消</el-button>
            <el-button type="primary" v-on:click="sumbitEditRow()">确定</el-button>
        </div>
    </el-dialog>
    @*分页*@
    <el-pagination v-on:size-change="handleSizeChange"
                   v-on:current-change="handleCurrentChange"
                   :current-page="pageIndex"
                   :page-sizes="[3, 10, 15, 20]"
                   :page-size="100"
                   layout="total, sizes, prev, pager, next, jumper"
                   :total="totalCount">
    </el-pagination>
</div>
<script src="~/js/vue.min.js"></script>
<script src="~/js/ElementUI/element-ui.js"></script>
<script src="~/js/axios.min.js"></script>
<script>
    new Vue({
        el: "#div1",
        data: {
            tableData: '',
            editFormVisible: false,
            addFormVisible: false,//是否显示编辑窗口
            formLabelWidth: '120px',
            fanLoading: false,
            input1: '',
            WareHouse: '',
            formData: {
                WareHouseData: '',
                wh: '',
                job: '',
                file: '',
            },
            ruleForm: {

            },
            rules: '',
            w: '',
            pageIndex: 1,
            pageSize: 3,
            totalCount: 11,
            RName: '',
            Remark: '',
            TemperatureZone: '',
            RName1: '',
            Remark1: '',
            TemperatureZone1: ''
        },

        methods: {
            Show() {//查询显示
                var _this = this
                console.log(this.w);
                axios
                    .get('http://localhost:3687/api/GetReservoirArea?whid=' + this.w + '&rname=' + this.input1 + '&pageIndex=' + this.pageIndex + '&pageSize=' + this.pageSize)
                    .then(response => { this.tableData = response.data.reservoirArea_list, this.totalCount = response.data.totalCount })
                    .catch(function (error) {
                        console.log(error);
                    })
            },
            addRow() {//点击添加
                this.addFormVisible = true
            },
            Upt(row) {//点击编辑
                this.editFormVisible = true
                this.WarehouseId = row.WarehouseId,
                    this.RName1 = row.rname,
                    this.Remark1 = this.remark
                    this.TemperatureZone1 = row.temperatureZone
            },
            Del(row) {//删除
                //console.log(row.warehouseId);
                this.$confirm('是否删除？', '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(() => {
                    axios({
                        url: "http://localhost:3687/api/DelEX_ReservoirArea?id=" + row.warehouseId,
                        method: "get"
                    }).then((response) => {
                        if (response.data > 0) {
                            this.$message({
                                type: "success",
                                message: "删除成功"
                            })
                            this.Show()
                        }
                    })
                })
            },
            sumbitEditRow() {//编辑后提交
                console.log(Id);
                axios.post('http://localhost:3687/api/UptEX_ReservoirArea',
                    {
                        Id: parseInt(this.WarehouseId),
                        RName1: this.RName1,
                        Remark1: this.Remark1,
                        TemperatureZone1: this.TemperatureZone1,
                        WIdd: this.w 
                    })
                    .then((response) => {
                        if (response.data > 0) {
                            this.editFormVisible = false,
                                this.$message({
                                    type: "success",
                                    message: "修改成功！"
                                })
                            this.Show()
                        }
                    })
                    .catch(function (error) {
                        console.log(error);
                    })
            },
            cancel() {//取消
                this.addFormVisible = false
                this.editFormVisible = false
                this.$message({
                    type: 'info',
                    message: '已取消操作'
                });
            },
            sumbitAddRow() {//确认添加
                //console.log(this.input2);
                axios({
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    dataType: "json",
                    url: 'http://localhost:3687/api/AddReservoirArea',
                    method: 'post',
                    data: { "RName": this.RName, "Remark": this.Remark, "TemperatureZone": this.TemperatureZone, "WIdd": this.w },
                })
                    .then((response) => {
                        console.log(response);
                        if (response.data == true) {
                            this.addFormVisible = false
                            this.$message({
                                type: "success",
                                message: "添加成功！"
                            })
                            this.Show()
                        }
                    })
                    .catch(function (error) {
                        console.log(error);
                    });
            },
            selectChange1(warehouseId) {
                obj = this.WareHouse.find((file) => {
                    return file.warehouseId == warehouseId
                });
                console.log(warehouseId);
                this.w = warehouseId;
            },
            //初始页pageIndex、初始每页数据pageSize和数据data
            handleSizeChange: function (size) {
                this.pageSize = size;
                console.log(this.pageSize)//每页下拉
                this.Show(this.pageSize);
            },
            handleCurrentChange: function (pageIndex) {
                this.pageIndex = pageIndex;
                console.log(this.pageIndex);
                this.Show(this.pageIndex);
            },
            ShowWareHouse() {//仓库下拉
                var _this = this
                axios
                    .get('http://localhost:3687/api/GetEX_Warehouse')
                    .then(function (res) {

                        _this.WareHouse = res.data
                    })
                    .catch(function (error) {
                        console.log(error);
                    })
            },
        },
        mounted() {//首次加载
            this.Show();
            this.ShowWareHouse();
        }
    });
</script>